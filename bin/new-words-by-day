#!/usr/bin/env perl
use 5.14.0;
use utf8::all;
use warnings;
use Anki::Morphology;
use DateTime;
use Chart::Clicker;
use Chart::Clicker::Axis::DateTime;
use Chart::Clicker::Renderer::Area;

my $morph = Anki::Morphology->new;
my $anki = $morph->anki;
my %i;
my %new_for_date;

my $sth = $anki->prepare("
    SELECT sentence.value, cards.firstAnswered
    FROM fields as sentence
        JOIN fieldModels on (sentence.fieldModelId = fieldModels.id)
        JOIN cards on (sentence.factId = cards.factId)
    WHERE
        fieldModels.name = '日本語'
        AND cards.type > 0
        AND cards.firstAnswered > 0
    ORDER BY cards.firstAnswered ASC
");
$sth->execute;

while (my ($sentence, $reviewed) = $sth->fetchrow_array) {
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime($reviewed);
    $year += 1900;
    $mon++;
    my $date = sprintf '%04d-%02d-%02d', $year, $mon, $mday;

    for my $morpheme ($morph->morphemes_of($sentence)) {
        push @{ $new_for_date{$date} }, $morpheme->{dictionary}
            if !$i{ $morpheme->{dictionary} }++;
    }
}

my $total = 0;
my $end = DateTime->now;

my $begin = (sort keys %new_for_date)[0];
my ($y, $m, $d) = split '-', $begin;
my $dt = DateTime->new(
    year  => $y,
    month => $m,
    day   => $d,
)->subtract(days => 1);

my (@keys, @values);
my @ticks;
my $prev_label = '';

until ($dt > $end) {
    $dt->add(days => 1);
    my $date = $dt->ymd;
    my @new = @{ $new_for_date{$date} || [] };
    my $new = @new;
    $total += $new;

    push @keys, $dt->epoch;
    push @values, $total;

    # note: don't substr month_name, J(une) and J(uly)
    my $label = $dt->month_name . ' ' . substr($dt->year, 2, 2);
    push @ticks, $dt->epoch
        if $prev_label ne $label;
    $prev_label = $label;

#    say join '|',
#        $date,
#        $new,
#        $total,
#        (join '、', @new);

}

my $cc = Chart::Clicker->new();

$cc->get_context('default')->renderer(Chart::Clicker::Renderer::Area->new);
$cc->title->text('Japanese Words I Know');
$cc->legend->visible(0);

sub DateTime::month_letter { substr(shift->month_name, 0, 1) }

$cc->get_context('default')->domain_axis(
    Chart::Clicker::Axis::DateTime->new(
        orientation      => 'horizontal',
        position         => 'bottom',
        tick_values      => \@ticks,
        format           => '%{month_letter} %y',
        tick_label_angle => 0.785398163,
    ),
);

$cc->get_context('default')->range_axis->format('%d');
$cc->get_context('default')->range_axis->label('Words');
$cc->get_context('default')->range_axis->tick_values(
    [ (grep { $_ % 1000 == 0 } 0 .. $total - 1), $total ],
);

my $series = Chart::Clicker::Data::Series->new(
    keys   => \@keys,
    values => \@values,
);

my $ds = Chart::Clicker::Data::DataSet->new(series => [ $series ]);
$cc->add_to_datasets($ds);

$cc->write_output('words.png');

