#!/usr/bin/env perl
use 5.14.0;
use warnings;
use utf8::all;
use Anki::Morphology;
use Lingua::JA::Moji 'kana2katakana';

my $morph = Anki::Morphology->new;
my $anki = $morph->anki;

my @number_chars = (
    qw/1 2 3 4 5 6 7 8 9/,
    qw/１ ２ ３ ４ ５ ６ ７ ８ ９/,
    qw/一 二 三 四 五 六 七 八 九 十 百 千 万/,
);

my $subquery = join " or ", map { "fields.value like '%$_%'" } @number_chars;

my $re = join '|', @number_chars;
$re = qr/$re/;

my $sth = $anki->prepare("
    select fields.value
    from fields
        join fieldModels on (fields.fieldModelId = fieldModels.id)
        join models on (fieldModels.modelId = models.id)
        join cards on (cards.factId = fields.factId)
    where
        models.name is '文'
        and fieldModels.name like '%読み%'
        and cards.type > 0
        and ( $subquery );
");
$sth->execute;

my %reading_for;

while (my ($readings) = $sth->fetchrow_array) {
    $readings =~ s/<br.*?>/\n/g;
    while ($readings =~ /^([^【】]*(?:$re)[^【】]*)【(.*?)】$/mg) {
        $reading_for{$1} = $2;
    }
}

for my $word (sort keys %reading_for) {
    next if $word =~ /,/; # confuses mecab
    my $reading = $reading_for{$word};
    my $katakana = kana2katakana($reading);
    say "$word,-1,-1,1,名詞,一般,*,*,*,*,$reading,$katakana,$katakana,$reading";
}
